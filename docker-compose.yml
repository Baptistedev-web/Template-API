services:
  php:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    container_name: template-api_php
    volumes:
      - ./backend:/var/www/html
    ports:
      - "9000:9000"
    env_file:
      - ./backend/.env
      - ./backend/.env.local
    environment:
      APP_ENV: ${APP_ENV}
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - template-api

  nginx:
    image: nginx:latest
    container_name: template-api_nginx
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend:/var/www/html
    command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - "8080:80"
    depends_on:
      - php
    networks:
      - template-api

  mysql:
    image: mysql:latest
    container_name: template-api_mysql
    env_file:
      - ./backend/.env
      - ./backend/.env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - template-api

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: template-api_phpmyadmin
    platform: linux/amd64
    environment:
      PMA_HOST: mysql
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - template-api

  frontend-nextjs:
    build:
      context: ./frontend
    container_name: template-api_frontend-nextjs
    ports:
      - "3000:3000"
    command: npm run dev
    networks:
      - template-api

volumes:
  db_data:

networks:
  template-api:
    driver: bridge